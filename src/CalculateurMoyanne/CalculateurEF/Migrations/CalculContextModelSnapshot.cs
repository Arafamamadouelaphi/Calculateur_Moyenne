// <auto-generated />
using CalculateurEF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CalculateurEF.Migrations
{
    [DbContext(typeof(CalculContext))]
    partial class CalculContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("CalculateurEF.Entities.BlocEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDMaquetteFrk")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MoyenneBloc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IDMaquetteFrk");

                    b.ToTable("Bloc");
                });

            modelBuilder.Entity("CalculateurEF.Entities.MaquetteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomMaquette")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Maquettes");
                });

            modelBuilder.Entity("CalculateurEF.Entities.MatiereEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Coef")
                        .HasColumnType("INTEGER");

                    b.Property<long>("IDUEForeignKey")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nommatiere")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Note")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IDUEForeignKey");

                    b.ToTable("matier");
                });

            modelBuilder.Entity("CalculateurEF.Entities.UEentity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Coefficient")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDForeignKey")
                        .HasColumnType("INTEGER");

                    b.Property<string>("intitulé")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("moyenneUe")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("IDForeignKey");

                    b.ToTable("Ue");
                });

            modelBuilder.Entity("CalculateurEF.Entities.BlocEntity", b =>
                {
                    b.HasOne("CalculateurEF.Entities.MaquetteEntity", "MaquetteEntity")
                        .WithMany("Bloc")
                        .HasForeignKey("IDMaquetteFrk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaquetteEntity");
                });

            modelBuilder.Entity("CalculateurEF.Entities.MatiereEntity", b =>
                {
                    b.HasOne("CalculateurEF.Entities.UEentity", "UEentity")
                        .WithMany("mat")
                        .HasForeignKey("IDUEForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UEentity");
                });

            modelBuilder.Entity("CalculateurEF.Entities.UEentity", b =>
                {
                    b.HasOne("CalculateurEF.Entities.BlocEntity", "BlocEntity")
                        .WithMany("UeEntityId")
                        .HasForeignKey("IDForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlocEntity");
                });

            modelBuilder.Entity("CalculateurEF.Entities.BlocEntity", b =>
                {
                    b.Navigation("UeEntityId");
                });

            modelBuilder.Entity("CalculateurEF.Entities.MaquetteEntity", b =>
                {
                    b.Navigation("Bloc");
                });

            modelBuilder.Entity("CalculateurEF.Entities.UEentity", b =>
                {
                    b.Navigation("mat");
                });
#pragma warning restore 612, 618
        }
    }
}
