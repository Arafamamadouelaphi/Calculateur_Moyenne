// <auto-generated />
using System;
using CalculateurEF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CalculateurEF.Migrations
{
    [DbContext(typeof(CalculContext))]
    partial class CalculContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("CalculateurEF.Entities.BlocEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaquetteEntityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MaquetteEntityId");

                    b.ToTable("Bloc");
                });

            modelBuilder.Entity("CalculateurEF.Entities.MaquetteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomMaquette")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Maquettes");
                });

            modelBuilder.Entity("CalculateurEF.Entities.MatiereEntity", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Coef")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nommatiere")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Note")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("UEentityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("UEentityId");

                    b.ToTable("matier");
                });

            modelBuilder.Entity("CalculateurEF.Entities.UEentity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Coefficient")
                        .HasColumnType("INTEGER");

                    b.Property<string>("intitulé")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ue");
                });

            modelBuilder.Entity("CalculateurEF.Entities.BlocEntity", b =>
                {
                    b.HasOne("CalculateurEF.Entities.MaquetteEntity", null)
                        .WithMany("Bloc")
                        .HasForeignKey("MaquetteEntityId");
                });

            modelBuilder.Entity("CalculateurEF.Entities.MatiereEntity", b =>
                {
                    b.HasOne("CalculateurEF.Entities.UEentity", null)
                        .WithMany("mat")
                        .HasForeignKey("UEentityId");
                });

            modelBuilder.Entity("CalculateurEF.Entities.MaquetteEntity", b =>
                {
                    b.Navigation("Bloc");
                });

            modelBuilder.Entity("CalculateurEF.Entities.UEentity", b =>
                {
                    b.Navigation("mat");
                });
#pragma warning restore 612, 618
        }
    }
}
